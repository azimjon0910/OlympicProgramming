package acmp;

/* acmp.ru   |   Задание №410
		Цифровое колдовство
(Время: 1 сек. Память: 16 Мб Сложность: 75%)
В современном мире все становится цифровым. Шаманы в одной сказочной северной стране тоже стараются не отставать от жизни. Последние изыскания показали, что в качестве материальных компонентов для колдовства с большой эффективностью можно использовать длинные веревки, сплетенные из моржовых усов. Каждая веревка кодирует магическое целое число следующим образом: сначала она определенным образом делится на части, соответствующие цифрам магического числа, в каждой из которых можно завязать от нуля до девяти узелков (глобализация вынуждает шаманов использовать обычную десятичную систему счисления). Конечно, при этом для задания очень больших чисел могут понадобиться длинные веревки. Можно надеяться, что вводная часть вам ясна. Шаман племени X наслал порчу на племя Y.

Шаману племени Y удалось выяснить, какое магическое число N было использовано при проведении страшного ритуала. Теперь ему нужно создать веревку с таким числом K, чтобы N + K делилось на фундаментальную магическую константу M. Необходимо сделать это как можно быстрее, поэтому он хочет выполнить задачу, завязав наименьшее число узелков, даже если для этого придется взять самую длинную веревку из потайного хранилища.

Поможете ли вы спасти племя Y (а в след за ним, может быть, и весь мир) от ужасного шамана племени X?

Входные данные
Во входном файле INPUT.TXT записаны два целых числа – N и M. Ограничения: 0 ≤ N ≤ 1000, 1 &lt; M ≤ 1000.

Выходные данные
В выходной файл OUTPUT.TXT выведите целое неотрицательное число K – ответ на задачу.

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|1 |5 8                 |11                  |
|2 |6 15                |24                  |
----------------------------------------------



Решение.

*/


import java.util.Scanner;

public class acmp_410 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}