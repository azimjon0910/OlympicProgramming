package acmp;

/* acmp.ru   |   Задание №97
		Заповедники
(Время: 1 сек. Память: 16 Мб Сложность: 50%)
<img src="/asp/article/image.asp?id=158" align="right"> В райской долине расположены N заповедников, имеющих форму прямоугольников. Однажды на собрании директоров было принято решение об увеличении площадей заповедников. Для этого директор каждого заповедника выбрал Ri - количество метров, на которое он хочет увеличить зону своего заповедника, смотрите рисунок. Однако после подписания соглашения выяснилось, что некоторые заповедники имеют общие земли. Такие заповедники было решено объединить в один, если объединенный заповедник пересекался с еще каким-нибудь заповедником их опять объединяли и так до тех пор пока не остались заповедник(и) не имеющие общих земель.

Ваша задача посчитать, сколько заповедников стало в долине после объединения.

Входные данные
Первая строка входного файла INPUT.TXT содержит число N (1 ≤ N ≤ 100) – количество заповедников. Далее идет N строк содержащих по пять целых чисел x1, y1, x2, y2, R. (x1, y1) и (x2, y2) – координаты противоположных вершин заповедника в метрах (-10^4 ≤ x1, y1, x2, y2 ≤ 10^4 ). Стороны заповедников параллельны осям координат. Заповедники, имеющие общую границу, считаются пересекающимися. R (0 ≤ R ≤ 10^4) – расстояние на которое отодвигается граница заповедника.

Выходные данные
В выходной файл OUTPUT.TXT выведите одно натуральное число – количество оставшихся заповедников после объединения.

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|--|--------------------|--------------------|
|  |3                   |2                   |
|  |3 1 6 4 1           |                    |
|1 |1 -2 2 -3 1         |                    |
|  |-2 -2 -1 -3 2       |                    |
|--|--------------------|--------------------|
----------------------------------------------



Решение.

*/


import java.util.Scanner;

public class acmp_97 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}