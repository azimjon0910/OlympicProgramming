package acmp;

/* acmp.ru   |   Задание №647
		Адаптивный поиск
(Время: 2 сек. Память: 16 Мб Сложность: 65%)
Знаменитая компания "Gold&amp;Silver Soft" решила занять ведущее место в области разработки реляционных баз данных. Руководство компании понимает, что для этого необходимо удивить потребителей быстродействием своего программного продукта.

Ни для кого не секрет, что в основе реляционной базы данных лежит таблица, которую можно рассматривать как одномерный массив записей. Известно, что при поиске все записи таблицы просматриваются последовательно, начиная с самой первой и заканчивая найденной.

Технический отдел компании установил, что часто бывает так, что поиск одной и той же записи в таблице производится несколько раз. Основываясь на этом, программисты решили после каждого нового поискового запроса менять порядок следования записей в таблице. Другими словами, после поиска найденная запись перемещается на первое место в таблице. Очевидно, что чем чаще осуществляется поиск определенной записи, тем ближе она будет к началу таблицы и тем быстрее будет поиск этой записи.

Вашей задачей является написать программу, которая для каждого из M последовательно заданных поисковых запросов будет определять количество просмотренных записей при поиске заданной. Для простоты обозначения будем считать, что имеется таблица с N записями, где запись – это число от 1 до N. В начале все записи в таблице расположены в порядке возрастания, то есть на i-м месте в таблице находится число i. Для приведенного ниже примера при M = 2, N = 6 и запросах на поиск чисел «5» и «3» потребуется 5 и 4 просмотра записей соответственно.

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|--|--------------------|--------------------|
|  |6 2                 |5 4                 |
|1 |5 3                 |                    |
|--|--------------------|--------------------|
|  |10 10               |10 10 10 10 10 10 10 10 10 10|
|2 |10 9 8 7 6 5 4 3 2 1|                    |
|--|--------------------|--------------------|
|  |3 14                |3 3 2 1 3 1 3 1 2 1 1 1 2 2|
|3 | 3 2 3 3 1 1 2 2 1 1 1 1 2 1|                    |
|--|--------------------|--------------------|
----------------------------------------------



Решение.

*/


import java.util.Scanner;

public class acmp_647 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}