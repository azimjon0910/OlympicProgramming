package acmp;

/* acmp.ru   |   Задание №994
		Длиннейшая общая подпара
(Время: 2 сек. Память: 64 Мб Сложность: 48%)
Будем называть пару строк (&#x3b1;, &#x3b2;) подпарой строки &#x3b3;, если &#x3b3; = &#x3b3;1&#x3b1;&#x3b3;2&#x3b2;&#x3b3;3 для некоторых (возможно пустых) строк &#x3b3;1, &#x3b3;2 и &#x3b3;3. Длиной пары строк будем называть сумму длин составляющих ее строк: |(&#x3b1;, &#x3b2;)| = |&#x3b1;| + |&#x3b2;|.

По заданным двум строкам &#x3be; и &#x3b7; найдите их длиннейшую общую подпару, то есть такую пару строк (&#x3b1;, &#x3b2;), что она является подпарой как &#x3be;, так и &#x3b7;, и ее длина максимальна.

Входные данные
Входной файл INPUT.TXT содержит две непустые строки &#x3be; и &#x3b7;, состоящие из маленьких букв английского алфавита. Длина каждой из строк не превышает 2000.

Выходные данные
В выходной файл OUTPUT.TXT выведите &#x3b1; на первой строке выходного файла и &#x3b2; на второй строке.

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|--|--------------------|--------------------|
|  |abacabadabacaba     |acaba               |
|1 | acabacadacabaca    |abaca               |
|--|--------------------|--------------------|
|  |ab                  |b                   |
|2 |bc                  |                    |
|--|--------------------|--------------------|
----------------------------------------------



Решение.

*/


import java.util.Scanner;

public class acmp_994 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}