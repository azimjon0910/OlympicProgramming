package acmp;

/* acmp.ru   |   Задание №159
		Обратная перестановка
(Время: 0,5 сек. Память: 16 Мб Сложность: 25%)
По заданной перестановке требуется определить обратную.

<i>Перестановкой</i> из N элементов называется упорядоченный набор из N различных чисел от 1 до N. Количество различных перестановок порядка N равно PN = N!

Пусть у нас есть упорядоченное множество из N элементов. Перестановка задает преобразование этого множества. А именно, она говорит, что на i место нужно поставить ai элемент множества, где ai - i-тый элемент перестановки.

<i>Обратной перестановкой</i> к перестановке &#x3c0; называется такая перестановка &#x3c0;^-1, что &#x3c0;&#x3c0;^-1 = &#x3c0;^-1&#x3c0; = &#x3b5;, где &#x3b5; – тождественная перестановка. То есть если применить сначала перестановку &#x3c0;, а потом обратную к ней &#x3c0;^-1, то в итоге получится такой результат, как если бы мы эти перестановки не применяли вообще. Такой же результат получится, если сначала применить обратную перестановку &#x3c0;^-1, а потом прямую &#x3c0;.

Входные данные
В первой строке входного файла INPUT.TXT записано число 0 &lt; N ≤ 20000 - порядок перестановки. Во второй строке записана сама перестановка.

Выходные данные
В выходной файл OUTPUT.TXT выведите обратную перестановку.

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|--|--------------------|--------------------|
|  |3                   |3 1 2               |
|1 |2 3 1               |                    |
|--|--------------------|--------------------|
----------------------------------------------



Решение.

*/


import java.util.Scanner;

public class acmp_159 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}