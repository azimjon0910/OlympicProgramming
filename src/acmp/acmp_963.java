package acmp;

/* acmp.ru   |   Задание №963
		Морфизм
(Время: 2 сек. Память: 16 Мб Сложность: 63%)
Рассмотрим слова, состоящие из первых n букв английского алфавита. Морфизм – это функция f, которая по букве возвращает слово. Рассмотрим пример морфизма: f(A) = ABC, f(B) = A, f(C) = BC.

Если мы рассмотрим слово w = c1c2...cl и применим к нему морфизм f, мы получим слово f(w) = f(c1)f(c2)...f(cl). Например, для морфизма из предыдущего параграфа f(ABC) = ABCABC.

Мы можем применять морфизм к слову несколько раз. Положим f0(w) = w, и для k &gt; 0 положим fk(w) = f(fk&#x2212;1(w)).

По заданному морфизму f, слову w, числу k и числу p, найдите p-й символ слова fk(w).

Входные данные
Первая строка входного файла INPUT.TXT содержит числа n, k и p (1 ≤ n ≤ 10, 0 ≤ k ≤ 10^9,1 ≤ p ≤ 20). Вторая строка входного файла содержит слово w. Его длина не превышает 50. Следующие n строк содержат f(A), f(B), и т.д. Каждое значение – это строка, содержащая от 1 до 50 символов.

Выходные данные
В выходной файл OUTPUT.TXT выведите p-й символ fk(w), или «-» (минус) - если такой символ отсутствует.

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|--|--------------------|--------------------|
|  |3 1 5               |B                   |
|  | ABC                |                    |
|1 | ABC                |                    |
|  | A                  |                    |
|  | BC                 |                    |
|--|--------------------|--------------------|
|  |3 1 7               |-                   |
|  | ABC                |                    |
|2 | ABC                |                    |
|  | A                  |                    |
|  | BC                 |                    |
|--|--------------------|--------------------|
----------------------------------------------



Решение.

*/


import java.util.Scanner;

public class acmp_963 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}