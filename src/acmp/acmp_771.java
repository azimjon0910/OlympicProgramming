package acmp;

/* acmp.ru   |   Задание №771
		Экзамен
(Время: 1 сек. Память: 16 Мб Сложность: 74%)
Осень прошла, зима наступает, и листва покинула множество деревьев главного городского парка. В этот период многие впадают в депрессию, включая студента Василия, так как ему предстоит сдать экзамен в конце года, а экзамен этот по теме «структуры данных», к которым в частности относятся и деревья. Пожалуйста, помогите ему подготовиться к экзамену, написав простую программу.

<i>N-арное дерево</i> – это дерево, степень каждого узла которого не превосходит N. Бинарные (двоичные) деревья – это частный случай n-арного дерева при n=2.

Существует красивый способ представить любое n-арное дерево с помощью бинарного. Речь идет о так называемом (FC-NS)-представлении (First Child – Next Sibling). Каждый узел такого дерева слева ссылается на потомка (или на NIL), а справа ссылка осуществляется на брата (узел с общим предком). Пусть Par(N) – функция, возвращающая предка для N, либо NIL в том случае, когда N – корень. Таким образом, узлы N и S – братья, если Par(N)=Par(S).

Будем обозначать узлы дерева ASCII-символами '0'-'9', 'a'-'z', 'A'-'Z'. Пусть Val(N) – функция, возвращающая ASCII-код символа, обозначающего узел. Определим также функцию FC(N), возвращающую первого потомка для N (либо NIL при отсутствии такового). Аналогично определим функцию NS(N), которая будет возвращать следующего брата за узлом N.

FC(N) – это потомок Сi с наименьшим значением Val(Ci) для всех потомков,

NS(N) – такой брат Si, с наименьшим Val(Si) для всех Val(Si)&gt;Val(N).

Ниже рассмотрим пример 3-арного дерева и его бинарного (FC-NS)-представления, полученное в результате вышеупомянутых рассуждений:

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|--|--------------------|--------------------|
|  |9                   |1                   |
|  | 1 -                ||                   |
|  | 2 1                |2-3-4               |
|  | 3 1                ||   |               |
|  | 4 1                |5-6 7               |
|1 | 5 2                |    |               |
|  | 6 2                |    8-9             |
|  | 7 4                |                    |
|  | 8 7                |                    |
|  | 9 7                |                    |
|--|--------------------|--------------------|
|  |1                   |A                   |
|2 |A -                 |                    |
|--|--------------------|--------------------|
----------------------------------------------

Примечание
Первый пример содержит дерево, описанное в тексте задания.



Решение.

*/


import java.util.Scanner;

public class acmp_771 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}