package acmp;

/* acmp.ru   |   Задание №863
		Антиарифметическая перестановка
(Время: 1 сек. Память: 16 Мб Сложность: 52%)
Перестановка (P0, P1, ..., PN&#x2212;1) чисел от 0 до N&#x2212;1 называется антиарифметической, если не существует такой тройки индексов 0 ≤ i &lt; j &lt; k &lt; N, что тройка Pi, Pj, Pk образует три последовательных члена некоторой арифметической прогрессии. Например, перестановка (3, 1, 0, 4, 2) антиарифметическая, а (0, 4, 5, 3, 1, 2) – нет (так как 0, 1, 2 – арифметическая прогрессия). Ваша задача по заданному значению N построить любую антиарифметическую перестановку.

Входные данные
Входной файл INPUT.TXT содержит целое число N (3 ≤ N ≤ 50000).

Выходные данные
В выходной файл OUTPUT.TXT выведите любую антиарифметическую перестановку длины N или -1, если такой нет.

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|1 |5                   |3 1 0 4 2           |
----------------------------------------------



Решение.

*/


import java.util.Scanner;

public class acmp_863 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}