package acmp;

/* acmp.ru   |   Задание №934
		Балда
(Время: 2 сек. Память: 16 Мб Сложность: 57%)
А вы играли в «балду»? Это такая игра, когда из букв одного слова нужно составить как можно больше других слов. И чем длиннее такие слова, тем больше очков игрок заработает. Отсюда понятно, что самые выгодные слова – это те, которые получены перестановкой букв исходного слова.

Хитрый Дима решил написать программу, которая распечатает ему заготовки для игры в "балду". Дима их выучит, и будет побеждать всех своих друзей. Дима решил распечатать группы слов, которые получаются перестановкой букв.

Таких групп может оказаться слишком много, поэтому Дима решил распечатать первые пять с самым большим количеством слов. Ну, а если в словаре окажется менее пяти групп, Дима распечатает их все. А, может быть, и Вы себе такую программу создадите? Глядишь, и пригодится!

Входные данные
Входной файл INPUT.TXT содержит число N – количество слов в словаре (2 ≤ N ≤ 25000). Далее идет N слов, по одному в строке. Каждое слово содержит не более 40 символов. Коды ASCII символов в словах превышают 32.

Выходные данные
В выходной файл OUTPUT.TXT выведите первые пять групп, отсортированных по количеству слов. Если групп меньше пяти, выведите все группы. Для каждой группы отсортируйте все слова в лексикографическом порядке. Повторяющиеся слова следует выводить однократно. Если есть несколько групп одного размера, отсортируйте их в лексикографическом порядке первого слова в группе (первое слово в группе – в лексикографическом порядке, а не в порядке добавления). Выводить группы слов следует согласно формату, описанному в примерах.

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|--|--------------------|--------------------|
|  |16                  |Group of size 5: caret carte cater crate trace .|
|  | undisplayed        | Group of size 4: abet bate beat beta .|
|  | trace              | Group of size 4: ate eat eta tea .|
|  | tea                | Group of size 1: displayed .|
|  | singleton          | Group of size 1: singleton .|
|  | eta                |                    |
|  | eat                |                    |
|  | displayed          |                    |
|1 | crate              |                    |
|  | cater              |                    |
|  | carte              |                    |
|  | caret              |                    |
|  | beta               |                    |
|  | beat               |                    |
|  | bate               |                    |
|  | ate                |                    |
|  | abet               |                    |
|--|--------------------|--------------------|
|  |8                   |Group of size 3: abc cba .|
|  | abc                | Group of size 2: pascal scalpa .|
|  | c++                | Group of size 1: basic .|
|  | cba                | Group of size 1: c++ .|
|2 | abc                | Group of size 1: java .|
|  | pascal             |                    |
|  | java               |                    |
|  | scalpa             |                    |
|  | basic              |                    |
|--|--------------------|--------------------|
----------------------------------------------



Решение.

*/


import java.util.Scanner;

public class acmp_934 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}