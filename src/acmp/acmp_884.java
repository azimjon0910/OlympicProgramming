package acmp;

/* acmp.ru   |   Задание №884
		Дорога
(Время: 3 сек. Память: 16 Мб Сложность: 85%)
В Древнем государстве Оссия было два города, между которыми была проложена дорога длиной S метров. Через каждый метр стояли столбики, на каждом из которых по некоторому принципу (этот секретный принцип был известен только древним монахам Шамбалы) было написано по букве (а алфавит там у них был английский). Однажды князь-король Василий I решил, что человек, когда он едет по этой дороге, слишком редко вспоминает о нем. Он решил это исправить. Для этого он повелел на некоторых столбиках вместо буквы написать «Здесь был Вася». По его представлению, человек, проехав любой участок дороги длиной K метров, должен обязательно хоть раз увидеть такую надписью Иными словами, среди каждых K идущих подряд столбиков должен оказаться хоть один, на котором буква заменена на надпись. При этом, чтобы не слишком раздражать монахов (а они люди обидчивые), Василий I приказал выбрать для надписи такие столбики, чтобы среди стертых букв оказалось как можно меньше различных букв английского алфавита.

Помогите боярам выполнить приказ своего повелителя.

Входные данные
В первой строке входного файла INPUT.TXT написано одно целое число K (1 ≤ K ≤ 100 000). Во второй строке – без пробелов написано S заглавных английских букв в той последовательности, в которой ими помечены столбики вдоль дороги. Гарантируется, что K ≤ S ≤ 100 000.

Выходные данные
В первой строке выходного файла OUTPUT.TXT выведите N – минимальное количество различных букв английского алфавита, которые хотя бы на одном столбике придется стереть, чтобы написать «Здесь был Вася». В следующих N строках выведите те заглавные буквы английского алфавита, которые потребуется хоть раз стереть. Буквы можно выводить в любом порядке. Если ответов с минимальным N несколько, можно вывести любой из них.

Пример:
----------------------------------------------
|№ |     INPUT.TXT      |     OUTPUT.TXT     |
|--|--------------------|--------------------|
|--|--------------------|--------------------|
|  |2                   |1                   |
|1 |ABA                 |A                   |
|--|--------------------|--------------------|
|  |2                   |2                   |
|2 |ABBAA               |A                   |
|  |                    |B                   |
|--|--------------------|--------------------|
----------------------------------------------



Решение.

*/


import java.util.Scanner;

public class acmp_884 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

		System.out.print("");
	}
}