package codeforces;

/* codeforces.com   |   Задание 630C
        Счастливые номера
(Время: 0.5 сек. Память: 64 Мб)
В новом здании налоговой инспекции ИТ-града было решено номера всех кабинетов сделать счастливыми.

Счастливым называется номер, состоящий только из цифр 7 и 8. Найдите максимальное количество кабинетов в новом здании
налоговой инспекции, если на табличку с номером кабинета помещается не более чем n-значное число.


Входные данные
Единственная строка входных данных содержит одно целое число n (1 ≤ n ≤ 55) — максимальная длина числа,
которое помещается на табличку.

Выходные данные
Выведите одно целое число — максимальное количество кабинетов, которые можно занумеровать различными счастливыми
номерами длины не более n.


Пример:
---------------------------------
|№ |  INPUT.TXT  |  OUTPUT.TXT  |
|-------------------------------|
|1 |2            |6             |
---------------------------------



Решение.
n      r
1  ->  2
2  ->  2 + 4
3  ->  2 + 4 + 8
4  ->  2 + 4 + 8 + 16
...
n  ->  (2+4+8...+2^n)  –  сумма первых n членов геометрической прогрессии
Находится по формуле: Sn = b1 * (1 - q^n) / (1-q)
Подставим в формуле: 2 * (1 - 2^n) / (1 - 2).
Упростим: 2^(n+1) - 2.

Для возведения 2 в какой-то степени используем битовый сдвиг: (1 << (n+1)) - 2.

Учитывая, что n ≤ 55, 2^(56) не "влезит" в int, т.к. int от  -2^31 до 2^31 - 1.

Таким образом получули следующую формулу: (1L << (n+1)) - 2.
*/

import java.util.Scanner;

public class Ex_630C {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        System.out.print((1L << (n+1)) - 2);
    }
}
