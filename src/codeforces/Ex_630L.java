package codeforces;
/* codeforces.com   |   Задание 630D
        Взлом кода
(Время: 0.5 сек. Память: 64 Мб)
Защита популярной программы, разработанной одной из компаний ИТ-града, устроена следующим образом.
При установке на компьютер пользователя она выводит случайное пятизначное число, которое нужно отослать
СМС-сообщением на определённый номер телефона. В ответном СМС приходит код активации программы.

Юный хакер Вася дизассемблировал данную программу и нашёл алгоритм, который преобразует выведенное число
в код активации. Примечание: разумеется, Вася — законопослушный хакер, и он сделал это из самых благородных
целей — чтобы продемонстрировать разработчику несовершенство их способа защиты.

Найденный алгоритм выглядит следующим образом. Сначала цифры числа перемешиваются в следующем порядке
<первая цифра><третья цифра><пятая цифра><четвёртая цифра><вторая цифра>. Например, из числа 12345 в результате
перемешивания должно получиться число 13542. На втором этапе число возводится в пятую степень.
Для числа 12345 после перемешивания и возведения в степень должен получиться результат 455 422 043 125 550 171 232.
Ответом будут 5 последних цифр этого результата. Для числа 12345 ответом должно быть 71232.

Васе осталось лишь написать программу-генератор ключей активации, реализующую данный алгоритм. А Вы сможете это сделать?


Входные данные
Единственная строка входных данных содержит положительное целое пятизначное число, для которого нужно найти код активации.


Выходные данные
Выведите ровно 5 цифр без пробелов — найденный код активации программы.


Пример:
---------------------------------
|№ |  INPUT.TXT  |  OUTPUT.TXT  |
|-------------------------------|
|1 |12345        |71232         |
---------------------------------



Решение.
1. Перемешивание цифр в числе. Для этого необходимо сначала разбить число на цифр каждого разряда.
Пусть n – исходное пятизначное число, d1 – слева первая цифра в числе n, d2 – вторая цифра,
d3 – третья цифра, d4 – четвертая цифра и d5 – пятая цифра. Тогда:
d1 = n / 10000;
d2 = n / 1000 % 10;
d3 = n / 100 % 10;
d4 = n / 10 % 10;
d5 = n % 10;
(Скобки можем не ставить, т.к. операторы / и % имеют одинаковый приоритет и выполняются слева на право.)
Далее из этих цифр создаем новое число. Порядок числа выглядит следующим образом: <d1><d3><d5><d4><d2>.
Пусть m – это новое число. Тогда:
m = d1*10000 + d3*1000 + d5*100 + d4*10 + d2;

2. Получение пяти последних цифр из m^5. Так как чсило m пятизначное, при возведение его в пятый степень
получим очень большое число, которое не вместится даже в тип long. Но в данной задаче необходимо найти только
последние пять цифр числа m, возведенное в пятую степень, мы можем пять раз умножить число m само на себя, но
после каждого умжножения "отбрасывать" с начала числа столько цифр, чтобы из него осталось только последние 5 цифр.
Напримере числа 13542:
13542 * 13542 = 183385764
183385764 % 100000 = 85764  –>  последние пять цифр числа 13542^2
85764 * 13542 = 1161416088
1161416088 % 100000 = 16088  ->  последние пять цифр числа 13542^3
...
Таким образом получаем следующую формулу:
res = m*m%100000*m%100000*m%100000*m%100000;
(Скобки можем не ставить, т.к. операторы * и % имеют одинаковый приоритет и выполняются слева на право.)

В случае если результирующее число начинается с нуля(ей), то их нужно будет вручную приписать. Есть несколько вариантов
делать это. Первое – разбивать число на пять цифр, как в разделе 1, второе – использовать класс String и его метод format.
В первом случае:
    d1 = res / 10000;
    d2 = res / 1000 % 10;
    d3 = res / 100 % 10;
    d4 = res / 10 % 10;
    d5 = res % 10;
    out = ""+d1+d2+d3+d4+d5;
Во втором случае:
out = String.format("%05d", res);

 */

import java.util.Scanner;

public class Ex_630L {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int d1 = n / 10000;
        int d2 = n / 1000 % 10;
        int d3 = n / 100 % 10;
        int d4 = n / 10 % 10;
        int d5 = n % 10;
        long m = d1 * 10000 + d3 * 1000 + d5 * 100 + d4 * 10 + d2;
        System.out.print(String.format("%05d", m * m % 100000 * m % 100000 * m % 100000 * m % 100000));
    }
}
